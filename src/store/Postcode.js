import { commafy } from "../util/common";
export default function() {
  return {
    namespaced: true,
    state: {
      loanMaxValue: 5000000,
      message: "",
      result: "",
      mixed: ["0822", "0828", "2250", "2320", "2321"],
      green: ["0800", "0810", "0812", "0820", "0830"],
      orange: [
        "0829",
        "0834",
        "0835",
        "0836",
        "0837",
        "0838",
        "0839",
        "0841",
        "3712",
        "3713",
        "3714",
        "3717",
        "3718",
        "3719",
        "3727",
        "3728",
        "3730",
        "3737",
        "3738",
        "3739",
        "3740",
        "3744",
        "3747",
        "3749",
        "3763",
        "3778",
        "3779",
        "3821",
        "3822",
        "3823",
        "3824",
        "3825",
        "3831",
        "3832",
        "3833",
        "3835",
        "3840",
        "3842",
        "3856",
        "3865",
        "3869",
        "3870",
        "3875",
        "3878",
        "3882",
        "3885",
        "3886",
        "3887",
        "3888",
        "3889",
        "3890",
        "3891",
        "3892",
        "3898",
        "3900",
        "3902",
        "3903",
        "3904",
        "3909",
        "3922",
        "3923",
        "3925",
        "3984",
        "3990",
        "3991",
        "3992",
        "3995",
        "3996",
        "4270",
        "4272",
        "4275",
        "4287",
        "4307",
        "4309",
        "4310",
        "4311",
        "4312",
        "4313",
        "4341",
        "4342",
        "4343",
        "4344",
        "4347",
        "4353",
        "4354",
        "4355",
        "4356",
        "4357",
        "4358",
        "4359",
        "4360",
        "4361",
        "4362",
        "4363",
        "4364",
        "4365",
        "4370",
        "4371",
        "4372",
        "4373",
        "4374",
        "4375",
        "4376",
        "4377",
        "4378",
        "4381",
        "4382",
        "4400",
        "4401",
        "4403",
        "4407",
        "4515",
        "4517",
        "4518",
        "4519",
        "4550",
        "4552",
        "4554",
        "4561",
        "4562",
        "4566",
        "4568",
        "4569",
        "4571",
        "4574",
        "4580",
        "4581",
        "4600",
        "4601",
        "4605",
        "4606",
        "4608",
        "4610",
        "4612",
        "4613",
        "4614",
        "4615",
        "4620",
        "4650",
        "4659",
        "4660",
        "4662",
        "4673",
        "4674",
        "4676",
        "4677",
        "4678",
        "4694",
        "4695",
        "4697",
        "4699",
        "4703",
        "4704",
        "4706",
        "4707",
        "4710",
        "4711",
        "4712",
        "4714",
        "4717",
        "4720",
        "4721",
        "4722",
        "4723",
        "4737",
        "4742",
        "4744",
        "4745",
        "4746",
        "4753",
        "4754",
        "4756",
        "4757",
        "4798",
        "4799",
        "4800",
        "4802",
        "4804",
        "4805",
        "4825",
        "4861",
        "4865",
        "5210",
        "5212",
        "5213",
        "5214",
        "5235",
        "5255",
        "5256",
        "5350",
        "5351",
        "5552",
        "5554",
        "5556",
        "5558",
        "5570",
        "5571",
        "5572",
        "5573",
        "5575",
        "5576",
        "5577",
        "5580",
        "5581",
        "5582",
        "5583",
        "5600",
        "5608",
        "5609",
        "6181",
        "6207",
        "6208",
        "6209",
        "6213",
        "6214",
        "6227",
        "6228",
        "6232",
        "6236",
        "6237",
        "6271",
        "6280",
        "6281",
        "6282",
        "6284",
        "6285",
        "6286",
        "6288",
        "6290",
        "6330",
        "6446",
        "6448",
        "6528",
        "6530",
        "7050",
        "7052",
        "7053",
        "7055",
        "7109",
        "7112",
        "7116",
        "7117",
        "7150",
        "7155",
        "7162",
        "7163",
        "7171",
        "7172",
        "7173",
        "7174",
        "7175",
        "7176",
        "7177",
        "7209",
        "7211",
        "7213",
        "7276",
        "7290",
        "7291",
        "7292",
        "7300",
        "7301",
        "7302",
        "7303",
        "7315",
        "7316",
        "7320",
        "7322",
        "7325"
      ],
      red: [
        "0840",
        "0845",
        "0846",
        "0850",
        "0852",
        "0854",
        "0860",
        "0862",
        "2311",
        "2339",
        "2341",
        "2342",
        "2343",
        "2357",
        "2358",
        "2359",
        "2360",
        "2361",
        "2369",
        "2371",
        "2372",
        "2395",
        "2396",
        "2398",
        "2399",
        "2400",
        "2401",
        "2402",
        "2403",
        "2404",
        "2405",
        "2406",
        "2408",
        "2409",
        "2410",
        "2420",
        "2421",
        "2474",
        "2475",
        "2476",
        "2583",
        "2585",
        "2586",
        "2587",
        "2588",
        "2590",
        "2594",
        "2621",
        "2623",
        "2626",
        "2627",
        "2628",
        "2629",
        "2630",
        "2631",
        "2633",
        "2642",
        "2644",
        "2645",
        "2648",
        "2653",
        "2655",
        "2656",
        "2658",
        "2659",
        "2660",
        "2663",
        "2665",
        "2666",
        "2668",
        "2669",
        "2671",
        "2672",
        "2675",
        "2700",
        "2701",
        "2702",
        "2703",
        "2705",
        "2706",
        "2707",
        "2710",
        "2711",
        "2712",
        "2713",
        "2714",
        "2715",
        "2716",
        "2717",
        "2720",
        "2721",
        "2722",
        "2725",
        "2726",
        "2727",
        "2729",
        "2730",
        "2731",
        "2732",
        "2733",
        "2734",
        "2735",
        "2736",
        "2737",
        "2738",
        "2739",
        "2791",
        "2792",
        "2793",
        "2794",
        "2797",
        "2798",
        "2803",
        "2804",
        "2805",
        "2806",
        "2807",
        "2808",
        "2809",
        "2810",
        "2818",
        "2820",
        "2821",
        "2823",
        "2824",
        "2825",
        "2826",
        "2827",
        "2828",
        "2829",
        "2832",
        "2833",
        "2834",
        "2835",
        "2836",
        "2838",
        "2839",
        "2840",
        "2842",
        "2843",
        "2844",
        "2864",
        "2865",
        "2866",
        "2867",
        "2868",
        "2869",
        "2870",
        "2871",
        "2873",
        "2874",
        "2875",
        "2876",
        "2877",
        "2878",
        "2879",
        "2880",
        "3260",
        "3264",
        "3266",
        "3269",
        "3270",
        "3289",
        "3292",
        "3293",
        "3294",
        "3300",
        "3302",
        "3304",
        "3305",
        "3310",
        "3311",
        "3312",
        "3314",
        "3315",
        "3317",
        "3318",
        "3319",
        "3321",
        "3324",
        "3325",
        "3328",
        "3329",
        "3330",
        "3332",
        "3333",
        "3351",
        "3360",
        "3361",
        "3371",
        "3373",
        "3374",
        "3377",
        "3379",
        "3380",
        "3381",
        "3384",
        "3385",
        "3387",
        "3388",
        "3390",
        "3391",
        "3392"
      ]
    },

    getters: {
      getMessage(state) {
        return state.message;
      },
      getResult(state) {
        return state.result;
      }
    },

    mutations: {
      saveMssage(state, { message }) {
        state.message = message;
      },
      saveResult(state, { result }) {
        state.result = result;
      }
    },
    actions: {
      getPostcodeValidation({ commit, state }, { postcode }) {
        if (state.green.indexOf(postcode) > -1) {
          commit("saveMssage", {
            message:
              "Great news! It looks like we can help you. To apply, please start your application."
          });
          return 1;
        } else if (state.orange.indexOf(postcode) > -1) {
          commit("saveMssage", {
            message:
              "Thank you, it looks like we may be able to help you. To apply, start your application or call us on 1300 889 338 or 03 9661 0999."
          });
          return 2;
        } else if (state.red.indexOf(postcode) > -1) {
          commit("saveMssage", {
            message:
              "Thank you for your enquiry. To find out more, call us on 1300 889 338 or 03 9661 0999."
          });
          return 3;
        } else if (state.mixed.indexOf(postcode) > -1) {
          commit("saveMssage", {
            message:
              "Thank you, it looks like we may be able to help you. To apply, start your application or call us on 1300 889 338 or 03 9661 0999."
          });
          return 2;
        } else {
          commit("saveMssage", {
            message:
              "Sorry we donâ€™t recognise that postcode. Please try again or call us on 1300 889 338 or 03 9661 0999."
          });

          return 4;
        }
      },
      clearResult({commit}) {
        commit("saveResult", {
          result: undefined
        });
      },
      setResult({ commit, state }, { houseValue, lvr }) {
        var calculationResult = houseValue * (lvr / 100);
        calculationResult = Number(calculationResult.toFixed(0));
        var result = Math.min(calculationResult, state.loanMaxValue);
        result = "$" + commafy(result);
        commit("saveResult", {
          result
        });
        return result;
      }
    }
  };
}
